---
target: assets/ingress/sbc.yaml
---

{%- set config = data.get('cluster') -%}
{%- set short_host = 'sbc.{}'.format(config['company']['domain']) -%}
{%- set long_host = 'sbc.{}-{}.{}'.format(config['cluster']['country'], config['cluster']['region'], config['company']['domain']) -%}
{%- set sbc_node = kube.get_first('node', namespace=None, selector={'sbc': 'true'}) -%}

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ short_host }}
  labels:
    project: {{ config['project'] }}
    environment: {{ config['environment'] }}
    domain: {{ short_host }}
    provides: sbc-websockets
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: 'true'
    ingress.kubernetes.io/proxy-send-timeout: 360s
    ingress.kubernetes.io/proxy-read-timeout: 360s
    {# create cname -> sbc node's hostname #}
    external-dns.alpha.kubernetes.io/target: {{ sbc_node.hostname }}
    {# pass-thru TLS *comment out secretName* #}
    ingress.kubernetes.io/ssl-passthrough: "true"
spec:
  tls:
  - hosts:
    - {{ short_host }}
    {# - {{ long_host }} #}
  rules:
  - host: {{ short_host }}
    http:
      paths:
      - path: /
        backend:
          serviceName: kamailio
          servicePort: 5064
  {# - host: {{ long_host }}
    http:
      paths:
      - path: /
        backend:
          serviceName: kamailio
          servicePort: 5064 #}
